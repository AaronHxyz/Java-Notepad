import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/*** Handles keyboard shortcuts (macros) for menu actions such as
 * Ctrl+S to save, Ctrl+Shift+S to save as, Ctrl+Z for undo, etc. */
public class KeyHandler implements KeyListener {

    private GUI gui;

    public KeyHandler(GUI gui) {
        this.gui = gui;
    }

    @Override
    public void keyTyped(KeyEvent e) {}


    /*** Invoked when a key has been pressed.
     * Handles shortcut combinations for saving, undo/redo, find dialog, etc.
     * @param e the KeyEvent generated by key press */
    @Override
    public void keyPressed(KeyEvent e) {
        // Ctrl + S
        if (e.isControlDown() && e.getKeyCode() == KeyEvent.VK_S) {
            gui.file.saveFile();
        }

        // Ctrl + Shift + S
        if (e.isControlDown() && e.getKeyCode() == KeyEvent.VK_S) {
            gui.file.saveFileAs();
        }

        // Ctrl + Z
        else if (e.isControlDown() && !e.isShiftDown() && e.getKeyCode() == KeyEvent.VK_Z) {
            gui.setIsRestoring(true);
            TextMemento undoMemento = gui.caretaker.undo(gui.getTextArea().getText());
            if (undoMemento != null) {
                gui.getTextArea().setText(undoMemento.getText());
            }
            gui.setIsRestoring(false);
        }

        // Ctrl + Shift + Z
        else if (e.isControlDown() && e.isShiftDown() && e.getKeyCode() == KeyEvent.VK_Z) {
            gui.setIsRestoring(true);
            TextMemento redoMemento = gui.caretaker.redo(gui.getTextArea().getText());
            if (redoMemento != null) {
                gui.getTextArea().setText(redoMemento.getText());
            }
            gui.setIsRestoring(false);
        }

        // Ctrl + F
        else if (e.isControlDown() && e.getKeyCode() == KeyEvent.VK_F) {
            if (!gui.getTextArea().getText().isEmpty()) {
                FindDialog findDialog = new FindDialog(gui.getWindow(), gui.getTextArea());
                findDialog.setVisible(true);
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {}
}
